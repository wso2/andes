/*
 * Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/*
 * This file is auto-generated by Qpid Gentools v.0.1 - do not modify.
 * Supported AMQP versions:
 *   8-0
 */
package org.wso2.andes.server.output;

import org.wso2.andes.server.queue.QueueEntry;
import org.wso2.andes.server.protocol.AMQProtocolSession;
import org.wso2.andes.server.message.MessageContentSource;
import org.wso2.andes.framing.AMQShortString;
import org.wso2.andes.framing.AMQDataBlock;
import org.wso2.andes.framing.ContentHeaderBody;
import org.wso2.andes.framing.abstraction.MessagePublishInfo;
import org.wso2.andes.AMQException;

public interface ProtocolOutputConverter
{
    void confirmConsumerAutoClose(int channelId, AMQShortString consumerTag);

    interface Factory
    {
        ProtocolOutputConverter newInstance(AMQProtocolSession session);
    }

    void writeDeliver(QueueEntry entry, int channelId, long deliveryTag, AMQShortString consumerTag)
            throws AMQException;

    void writeGetOk(QueueEntry message, int channelId, long deliveryTag, int queueSize) throws AMQException;

    byte getProtocolMinorVersion();

    byte getProtocolMajorVersion();

    void writeReturn(MessagePublishInfo messagePublishInfo, ContentHeaderBody header, MessageContentSource msgContent,  int channelId, int replyCode, AMQShortString replyText)
                    throws AMQException;

    void writeFrame(AMQDataBlock block);
}
